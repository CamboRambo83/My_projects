1.)	The first instant I saw was The TCP handshake between my IP: 192.168.254.34 on port:51386 and the Destination IP: 151.101.196.193 on port: 80. This Application-later protocol is identified as the "HTTP" protocol. The Beginning of the communication between the two network is started with a TCP Handshake connections. Once it was connected then the DATA transmission was started and I was able to 'GET' the data I requested which was a .png file from google.com. After a few more request from the user to get more .jpg & .png data files google.com. After that once all request was completed an [ACK] was sent to Destination to Finalize connection and then Destination sent an [FIN,ACK] to the user and the user then sent one last [ACK] to acknowledge the close. The total data that was sent equals to 6,524 bytes of data transmitted.

2.)	The second instant I saw was the 'TLSv1.2' protocol being in effect. First I had to set the filter in the pcap to 'TLSv1.2' then I had to click on the line that has the TLSv1.2 line that says Client Hello in the Info tab and it pretty much organized to the connections that's on the TCP with the TLSv1.2. The TLS is a cryptographic protocol that provides end-to-end communications security over networks and is widely used for internet communications and online transactions. Included in the HomeAnalysis folder is the picture of the pcap I've filtered. Basically from my investigation, I can see that there was an established TCP Handshake for data was transferred. Once TCP Handshake was initiated, then the Transport Layer Security protocol sent the flags which included the Acknowledgment: Set and Push: Set. That pretty much means that it's safe to start transferring data to the destination on the network. Throughout the conversation TLSv1.2 was in effect every time a request/response occurred between source and Destination. 

In this case Source IP: 192.168.254.34 on Port: 51399
and Destination IP: 172.104.215.242 on Port 443

To finalize the connection closing source sent [ACK], then dest. Sent [FIN,ACK], then source sends an [ACK], but TLS confirms the [ACK] by notifying user that there's an Encrypted Alert which means it was a TCP handshake encrypted for security to close out the connection. Then TLS set:ACK and set: PUSH. After that dest. Sent one last [ACK] to close out connection.
